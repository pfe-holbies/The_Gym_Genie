http {
    server {
        listen 80;
        server_name api.example.com;

        location / {
            proxy_pass https://api.openai.com;
            proxy_set_header Host api.openai.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # The following headers may need to be adjusted depending on your application
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;

            # Uncomment the following line to enable HTTP/2 support
            proxy_http_version 2;

            # Enable caching for API responses
            proxy_cache_path /server_cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=4d use_temp_path=off;
            proxy_cache_methods POST;
            proxy_cache_key "$request_method|$request_uri|$request_body";
            proxy_cache_valid 200 4d;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            access_log /dev/stdout cache_log;
            proxy_ignore_headers Cache-Control;
            add_header X-Cache-Status $upstream_cache_status;

            # Set the maximum request body size
            client_max_body_size 4m;
        }
    }
}